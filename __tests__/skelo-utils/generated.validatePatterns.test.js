// Generated by Qodo Gen
const {validatePatterns} = require('../../lib/skelo-utils');
describe('validatePatterns', () => {

    // validatePatterns throws an error when pattern is null
    it('should throw an error when pattern is null', () => {
      expect(() => validatePatterns(null, 'TestPattern')).toThrow('TestPattern is required');
    });

    // validatePatterns throws an error when pattern is an empty string
    it('should throw an error when pattern is an empty string', () => {
      expect(() => validatePatterns('', 'TestPattern')).toThrow('TestPattern is required');
    });

    // validatePatterns throws an error when pattern is undefined
    it('should throw an error when pattern is undefined', () => {
      expect(() => validatePatterns(undefined, 'TestPattern')).toThrow('TestPattern is required');
    });

    // validatePatterns does not throw an error when pattern is a non-empty string
    it('should not throw an error when pattern is a non-empty string', () => {
      expect(() => validatePatterns('validPattern', 'TestPattern')).not.toThrow();
    });

    // validatePatterns throws an error when pattern is a boolean false
    it('should throw an error when pattern is a boolean false', () => {
      expect(() => validatePatterns(false, 'TestPattern')).toThrow('TestPattern is required');
    });
});
